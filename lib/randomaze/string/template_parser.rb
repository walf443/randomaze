#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/randomaze/string/template_parser.y".
#

require 'racc/parser'


require 'strscan'


module Randomaze

  module String

    class TemplateParser < Racc::Parser

module_eval <<'..end lib/randomaze/string/template_parser.y modeval..id622e93103b', 'lib/randomaze/string/template_parser.y', 60

def self.parse str
  new.parse(str)
end

def parse str
  raise Racc::ParseError if str.empty?
  @tokens = []
  @s = StringScanner.new(str)
  scan_str
  result = do_parse
  arr = []
  tmp = result
  while tmp[1].kind_of? Array
    arr << tmp.first
    tmp = tmp[1]
  end
  arr << tmp.first

  arr
end

def next_token
  @tokens.shift
end

def scan_str
  set_start_fg = false
  until @s.eos? do
    if set_start_fg
      case
      when @s.scan(/\]/)
        set_start_fg = false
        @tokens.push([:SETS_END, ']' ])
      when @s.scan(/([A-Za-z0-9])-([A-Za-z0-9])/)
        @tokens.push([ :RANGE, [ @s[1], @s[2] ] ])
        if @s[1] =~ /[a-zA-Z]/ && @s[2] =~ /[a-zA-Z]/
          @tokens.push([ :ALPHA, @s[1] ])
          @tokens.push([ :ALPHA, @s[2] ])
        elsif @s[1] =~ /[0-9]/ && @s[2] =~ /[0-9]/
          @tokens.push([ :NUMCHAR, @s[1].to_i ])
          @tokens.push([ :NUMCHAR, @s[2].to_i ])
        else
          raise Racc::ParseError, "#{@s[0]} is wrong"
        end

      when @s.scan(/[0-9]+/)
        raise Racc::ParseError, "#{@s[0]} is wrong" if @s[0].size > 1
        @tokens.push([:NUMCHAR, @s[0].to_i ])
      when @s.scan(/[a-zA-Z]/)
        @tokens.push([:ALPHA, @s[0] ])
      when @s.scan(/-/)
        @tokens.push(['-', @s[0] ])
      else
        s = @s.getch
        @tokens.push [:IDENT, s]
      end
    else
      case
      when @s.scan(/\[/)
        set_start_fg = true
        @tokens.push([:EXPR_START, '[' ])
        @tokens.push([:SETS_START, '[' ])
      when @s.scan(/\{/)
        @tokens.push([:COUNT_START, '{' ])
      when @s.scan(/\}/)
        @tokens.push([:COUNT_END, '}' ])
      when @s.scan(/[0-9]+/)
        @tokens.push([:NUMBER, @s[0].to_i ])
      else
        s = @s.getch
        @tokens.push [s, s]
      end
    end
  end
end

..end lib/randomaze/string/template_parser.y modeval..id622e93103b

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 0, 13, :_reduce_none,
 2, 13, :_reduce_2,
 3, 14, :_reduce_3,
 3, 15, :_reduce_4,
 3, 16, :_reduce_5,
 0, 17, :_reduce_none,
 2, 17, :_reduce_7,
 1, 18, :_reduce_none,
 1, 18, :_reduce_9,
 3, 19, :_reduce_10,
 1, 20, :_reduce_none,
 1, 20, :_reduce_none,
 1, 21, :_reduce_none,
 1, 21, :_reduce_none ]

racc_reduce_n = 15

racc_shift_n = 26

racc_action_table = [
    11,    13,    15,     8,    11,    13,    15,     8,    15,     8,
    15,     8,    19,    17,     1,    20,     1,     6,    23,     4,
    25 ]

racc_action_check = [
     4,     4,     4,     4,    10,    10,    10,    10,    22,    22,
    11,    11,     6,     5,     0,     9,     3,     2,    17,     1,
    23 ]

racc_action_pointer = [
    12,    16,    17,    14,    -8,     8,    12,   nil,   nil,    11,
    -4,     0,   nil,   nil,   nil,   nil,   nil,    12,   nil,   nil,
   nil,   nil,    -2,    13,   nil,   nil ]

racc_action_default = [
    -1,   -15,   -15,    -1,    -6,   -15,   -15,    -2,   -14,   -15,
    -6,   -15,    -8,   -11,    -9,   -13,   -12,   -15,    -3,    26,
    -4,    -7,   -15,   -15,   -10,    -5 ]

racc_goto_table = [
    22,     9,     2,     5,    18,     7,   nil,    21,   nil,   nil,
   nil,    24 ]

racc_goto_check = [
     9,     5,     1,     3,     4,     1,   nil,     5,   nil,   nil,
   nil,     9 ]

racc_goto_pointer = [
   nil,     2,   nil,     2,    -1,    -3,   nil,   nil,   nil,   -11 ]

racc_goto_default = [
   nil,   nil,     3,   nil,   nil,   nil,    10,    12,    14,    16 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :EXPR_START => 2,
 :SETS_START => 3,
 :SETS_END => 4,
 :COUNT_START => 5,
 :NUMBER => 6,
 :COUNT_END => 7,
 :RANGE => 8,
 :IDENT => 9,
 :ALPHA => 10,
 :NUMCHAR => 11 }

racc_use_result_var = true

racc_nt_base = 12

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'EXPR_START',
'SETS_START',
'SETS_END',
'COUNT_START',
'NUMBER',
'COUNT_END',
'RANGE',
'IDENT',
'ALPHA',
'NUMCHAR',
'$start',
'exprs',
'expr',
'sets_expr',
'count_expr',
'sets',
'set',
'range',
'ident',
'alnum']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

module_eval <<'.,.,', 'lib/randomaze/string/template_parser.y', 8
  def _reduce_2( val, _values, result )
              result = val
   result
  end
.,.,

module_eval <<'.,.,', 'lib/randomaze/string/template_parser.y', 14
  def _reduce_3( val, _values, result )
              val.shift
              result = val
   result
  end
.,.,

module_eval <<'.,.,', 'lib/randomaze/string/template_parser.y', 25
  def _reduce_4( val, _values, result )
              array = []
              val[1].flatten.each do |range|
                next unless range
                array << range
              end

              result = array.uniq
   result
  end
.,.,

module_eval <<'.,.,', 'lib/randomaze/string/template_parser.y', 30
  def _reduce_5( val, _values, result )
              result = val[1]
   result
  end
.,.,

 # reduce 6 omitted

module_eval <<'.,.,', 'lib/randomaze/string/template_parser.y', 36
  def _reduce_7( val, _values, result )
              result = val
   result
  end
.,.,

 # reduce 8 omitted

module_eval <<'.,.,', 'lib/randomaze/string/template_parser.y', 42
  def _reduce_9( val, _values, result )
              result = val
   result
  end
.,.,

module_eval <<'.,.,', 'lib/randomaze/string/template_parser.y', 47
  def _reduce_10( val, _values, result )
              result = val[1]..val[2]
   result
  end
.,.,

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 def _reduce_none( val, _values, result )
  result
 end

    end   # class TemplateParser

  end   # module String

end   # module Randomaze
